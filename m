Return-Path: <spice-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+spice-devel@lfdr.de
Delivered-To: lists+spice-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 43DA412B52
	for <lists+spice-devel@lfdr.de>; Fri,  3 May 2019 12:12:55 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 3663589956;
	Fri,  3 May 2019 10:12:53 +0000 (UTC)
X-Original-To: spice-devel@lists.freedesktop.org
Delivered-To: spice-devel@lists.freedesktop.org
Received: from mx1.redhat.com (mx1.redhat.com [209.132.183.28])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 65F9A89803
 for <spice-devel@lists.freedesktop.org>; Fri,  3 May 2019 10:12:51 +0000 (UTC)
Received: from smtp.corp.redhat.com (int-mx02.intmail.prod.int.phx2.redhat.com
 [10.5.11.12])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by mx1.redhat.com (Postfix) with ESMTPS id B5E65368E7;
 Fri,  3 May 2019 10:12:50 +0000 (UTC)
Received: from colo-mx.corp.redhat.com
 (colo-mx02.intmail.prod.int.phx2.redhat.com [10.5.11.21])
 by smtp.corp.redhat.com (Postfix) with ESMTPS id A6CE260BF7;
 Fri,  3 May 2019 10:12:50 +0000 (UTC)
Received: from zmail25.collab.prod.int.phx2.redhat.com
 (zmail25.collab.prod.int.phx2.redhat.com [10.5.83.31])
 by colo-mx.corp.redhat.com (Postfix) with ESMTP id 9923F4A460;
 Fri,  3 May 2019 10:12:50 +0000 (UTC)
Date: Fri, 3 May 2019 06:12:49 -0400 (EDT)
From: Frediano Ziglio <fziglio@redhat.com>
To: Francois Gouget <fgouget@codeweavers.com>
Message-ID: <865850674.16196441.1556878369203.JavaMail.zimbra@redhat.com>
In-Reply-To: <580692135.16193644.1556876600970.JavaMail.zimbra@redhat.com>
References: <E1hE9Tp-0006PZ-O0@amboise>
 <20190411093859.muawnv3u4vnxpuqp@toolbox>
 <alpine.DEB.2.21.1904170619150.22323@amboise.dolphin>
 <53178cd8-a0f6-dab2-3d71-974c157b9c5b@redhat.com>
 <alpine.DEB.2.21.1904191315160.25263@amboise.dolphin>
 <580692135.16193644.1556876600970.JavaMail.zimbra@redhat.com>
MIME-Version: 1.0
X-Originating-IP: [10.33.32.14, 10.4.195.5]
Thread-Topic: Enable mm_time adjustments on startup
Thread-Index: dFL2AkPoOXLcn1AqIpeCeTrFBdP7lNKyxn6B
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.12
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
 (mx1.redhat.com [10.5.110.30]); Fri, 03 May 2019 10:12:50 +0000 (UTC)
Subject: Re: [Spice-devel] [spice] Enable mm_time adjustments on startup
X-BeenThere: spice-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: <spice-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/spice-devel>, 
 <mailto:spice-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/spice-devel>
List-Post: <mailto:spice-devel@lists.freedesktop.org>
List-Help: <mailto:spice-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/spice-devel>, 
 <mailto:spice-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: Spice devel <spice-devel@lists.freedesktop.org>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: spice-devel-bounces@lists.freedesktop.org
Sender: "Spice-devel" <spice-devel-bounces@lists.freedesktop.org>

CgotLS0tLSBPcmlnaW5hbCBNZXNzYWdlIC0tLS0tCj4gRnJvbTogIkZyZWRpYW5vIFppZ2xpbyIg
PGZ6aWdsaW9AcmVkaGF0LmNvbT4KPiBUbzogIkZyYW5jb2lzIEdvdWdldCIgPGZnb3VnZXRAY29k
ZXdlYXZlcnMuY29tPgo+IENjOiAiU3BpY2UgZGV2ZWwiIDxzcGljZS1kZXZlbEBsaXN0cy5mcmVl
ZGVza3RvcC5vcmc+Cj4gU2VudDogRnJpZGF5LCAzIE1heSwgMjAxOSAxMDo0MzoyMCBBTQo+IFN1
YmplY3Q6IFJlOiBbU3BpY2UtZGV2ZWxdIFtzcGljZV0gRW5hYmxlIG1tX3RpbWUgYWRqdXN0bWVu
dHMgb24gc3RhcnR1cAo+IAo+ID4gT24gV2VkLCAxNyBBcHIgMjAxOSwgU25pciBTaGVyaWJlciB3
cm90ZToKPiA+IFsuLi5dCj4gPiA+ID4gVGhlIHJlYXNvbiBmb3IgdGhhdCBpcyB0aGF0IHdoaWxl
IGEgbWluaW11bSA0MDAgbXMgbGF0ZW5jeSBpcyBmaW5lIHdoZW4KPiA+ID4gPiBwbGF5aW5nIGEg
WW91VHViZSB2aWRlbyBbMV0sIGl0J3MgdmVyeSBhbm5veWluZyB3aGVuIHRoZSB3aG9sZSBkZXNr
dG9wCj4gPiA+ID4gaXMgYmVpbmcgc3RyZWFtZWQsIGVpdGhlciB0aHJvdWdoIHRoZSBzdHJlYW1p
bmcgYWdlbnQgb3IgdGhyb3VnaCB0aGUKPiA+ID4gPiBmdXR1cmUgVmlyZ2wgcmVtb3RlIGFjY2Vz
cywgYmVjYXVzZSB0aGVuIGl0IHRyYW5zbGF0ZXMgaW50byBhIDQwMCBtcwo+ID4gPiAKPiA+ID4g
QXJlIHlvdSB3b3JraW5nIG9uIHNvbWV0aGluZyBsaWtlIHRoYXQgKHJlbW90ZSB2aXJnbCk/Cj4g
PiAKPiA+IFllcy4gU2VlICh0aG91Z2ggSSBuZWVkIHRvIHVwZGF0ZSByZWZyZXNoIHRoZXNlIEdp
dEh1YiBicmFuY2hlcyk6Cj4gPiAKPiA+IGh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL2Fy
Y2hpdmVzL3NwaWNlLWRldmVsLzIwMTktSmFudWFyeS8wNDczMjkuaHRtbAo+ID4gCj4gPiAKPiA+
ID4gTm90aWNlIHRoYXQgY3VycmVudGx5IHRoZXJlJ3Mgc21hbGwgaGFja3kgcGF0Y2ggb24gY2xp
ZW50IHRvIGlnbm9yZQo+ID4gPiBsYXRlbmN5Cj4gPiA+IHdoZW4gaXQncyBmdWxsCj4gPiA+IHNj
cmVlbiBzdHJlYW1pbmcgYW5kIHRoZXJlIGlzIG5vIGF1ZGlvIHBsYXliYWNrLgo+ID4gPiAKPiA+
ID4gKGQwNDdiMmZiN2Y1ZDQ5MmQ2YzQ5ZjU4OWJhNWZmODYyYzZiMTE1ZGEpCj4gPiAKPiA+IFJp
Z2h0LiBJdCBuZXZlciBhY3R1YWxseSBoYWQgYW55IGVmZmVjdCBpbiBteSB0ZXN0cy4KPiA+ICog
V2hlbiB0ZXN0aW5nIHRoZSBmdWxsc2NyZWVuIHN0cmVhbWluZyBpbiBRRW11IChpLmUuIHdoZW4K
PiA+ICAgc3RyZWFtaW5nX21vZGUgaXMgdHJ1ZSkgSSBoYWQgdG8gdXNlIHRoZSBtanBlZyBlbmNv
ZGluZyBiZWNhdXNlIHRoZXJlCj4gPiAgIHNlZW1zIHRvIGJlIHNvbWUgY29uZmxpY3QgYmV0d2Vl
biBRRW11IGFuZCBHU3RyZWFtZXIgb24gRGViaWFuLiBCdXQKPiA+ICAgdGhlIHBhdGNoIGhhcyBu
byBlZmZlY3Qgb24gdGhlIGJ1aWx0aW4gbWpwZWcgZGVjb2RlciBiZWNhdXNlIHRoZQo+ID4gICBs
YXRlbmN5IGluIG1qcGVnX2RlY29kZXJfcXVldWVfZnJhbWUoKSBpcyB0byBkcm9wIGZyYW1lcyBp
ZiBpdCBpcwo+ID4gICBuZWdhdGl2ZS4gVG8gZGV0ZXJtaW5lIHdoZW4gdG8gZGlzcGxheSB0aGUg
ZnJhbWUgaXQgdXNlcyB0aGUgZnJhbWUncwo+ID4gICB0aW1lc3RhbXAuCj4gPiAqIFRoZSByZXN0
IG9mIHRoZSB0aW1lIEknbSB0ZXN0aW5nIGJ5IHJ1bm5pbmcgYW4gT3BlbkdMIGFwcGxpY2F0aW9u
IGluIGEKPiA+ICAgcmVndWxhciBzZXNzaW9uIGFuZCBzbyBzdHJlYW1pbmdfbW9kZSBpcyBmYWxz
ZSBzbyB0aGUgR3N0VmlkZW9PdmVybGF5Cj4gPiAgIGlzIG5vdCB1c2VkIGFuZCB0aHVzIHRoZSBw
YXRjaCBoYXMgbm8gZWZmZWN0Lgo+ID4gCj4gPiAgIFRoYXQncyBiZWNhdXNlIHNwaWNlX2dzdF9k
ZWNvZGVyX3F1ZXVlX2ZyYW1lKCkgdXNlcyBsYXRlbmN5IHRvIGRyb3AKPiA+ICAgZnJhbWVzIGlm
IGl0IGlzIG5lZ2F0aXZlOyBhbmQgdG8gZGV0ZXJtaW5lIHRoZSBkZWFkbGluZSBmb3IgZGVjb2Rp
bmcKPiA+ICAgdGhlIGZyYW1lLiBXaGVuIG5vdCB1c2luZyB0aGUgdmlkZW8gb3ZlcmxheSB0aGUg
ZGVjb2RlZCBmcmFtZXMgdGhlbgo+ID4gICBnZXQgcXVldWVkIHVudGlsIGl0IGlzIHRpbWUgdG8g
ZGlzcGxheSB0aGVtLCBhY2NvcmRpbmcgdG8gdGhlaXIKPiA+ICAgbW1fdGltZSB0aW1lc3RhbXAg
d2hpY2ggaXMgbm90IGltcGFjdGVkIGJ5IGxhdGVuY3kuCj4gPiAKPiA+IFRoYXQgc2FpZCBJJ20g
bm90IHN1cmUgaWdub3JpbmcgdGhlIGZyYW1lcyBtbV90aW1lIHRpbWVzdGFtcCBpcyBhIGdvb2QK
PiA+IGlkZWEgYXMgaXQgbWVhbnMgdGhlIG5ldHdvcmsgaml0dGVyIHdpbGwgdHJhbnNsYXRlIGRp
cmVjdGx5IGludG8KPiA+IGZyYW1lcmF0ZSBqaXR0ZXIgKGUuZy4gaW4gT3BlbkdMIGFwcGxpY2F0
aW9ucyBvciBpbiBzaWxlbnQgbW92aWVzKS4KPiA+IAo+ID4gCj4gPiA+ID4gT3RoZXIgc3RlcHMg
YXJlOgo+ID4gPiA+ICogUmVkdWNpbmcgdGhlIGRlZmF1bHQgbGF0ZW5jeS4KPiA+ID4gCj4gPiA+
IFdoYXQgd2lsbCBiZSB0aGUgZGVmYXVsdD8gd2hhdCB3aWxsIGhhcHBlbiB0byBsYXRlIHZpZGVv
IGZyYW1lcz8KPiA+IAo+ID4gTGF0ZSBmcmFtZXMgd2lsbCBiZSBkcm9wcGVkIGFzIGhhcyBhbHdh
eXMgYmVlbiB0aGUgY2FzZSAoYXQgbGVhc3QgaW4KPiA+IHRoZSBtanBlZyBjYXNlIG90aGVyd2lz
ZSBpdCdzIGEgYml0IG1vcmUgY29tcGxleCkuCj4gPiAKPiAKPiBJIHRoaW5rIHRoZSB0ZXJtaW5v
bG9neSBzaG91bGQgcmVhbGx5IGJlIGNoYW5nZWQuCj4gIkxhdGUgZnJhbWUiOiB3aGF0IGRvZXMg
aXQgbWVhbj8gSWdub3JlIHRoYXQgd2Uga25vdyB0aGUgcHJvdG9jb2wgYW5kCj4gaW1wbGVtZW50
YXRpb24gaXQgZG9lcyBub3QgbWFrZSBzZW5zZSwgYWxsIGZyYW1lcyBhcmUgbGF0ZSwgdGhpcyBp
cwo+IGxpdmUgc3RyZWFtaW5nLCB0aGVyZSBjYW4gYmUgYSAidG9vIGxhdGUiLCBub3QgYSAibGF0
ZSIsIHRoZXkgYXJlIGFsbCBsYXRlLgo+IFdlIGhhdmUgYW4gZXhwZWN0YXRpb24gYW5kIHdlIGRl
ZmluZSB0aGUgbGF0ZSBvciBub3QgYmFzZWQgb24gdGhhdAo+IGV4cGVjdGF0aW9uLgo+IAo+ID4g
QXMgYmVmb3JlIHRoZSBsYXRlbmN5IG11c3QgYmUgYWRqdXN0ZWQsIGFuZCBwYXJ0aWN1bGFybHks
IGluY3JlYXNlZCwgYXMKPiA+IHJlcXVpcmVkIHRvIGF2b2lkIGRyb3BwaW5nIGZyYW1lcy4gT2Yg
Y291cnNlIHdoZW4gc3RhcnRpbmcgd2l0aCBhCj4gCj4gSG9uZXN0bHksIHdlIHJlY2VpdmUgYSBm
cmFtZSwgdGhpcyBpcyB0aGUgYmVzdCBhbmQgbW9yZSB1cGRhdGVkIHNjcmVlbgo+IHdlIGhhdmUu
IFdoYXQgZG8geW91IHdhbnQgdG8gZG8/IERyb3AgaXQsIHRoYXQncyBvYnZpb3VzLiBBcmUgd2Ug
cmVhbGx5Cj4gc3VyZSBhYm91dCB0aGF0PyBJcyB0aGF0IHRoZSByZWFzb24gd2h5IHdlICJtdXN0
IiBpbmNyZWFzZSB0aGlzICJsYXRlbmN5Ij8KPiAKPiAibGF0ZW5jeSI6IHRoaXMgdGVybSBpcyBy
ZWFsbHkgY29uZnVzaW5nLiBUYWtpbmcgaW50byBhY2NvdW50IHRoYXQgd2UKPiBuZWVkIHRvIGRl
YWwgYWxzbyB3aXRoIG5ldHdvcmsgbGF0ZW5jeSBidXQgdGhpcyBpcyBub3QgaXQgSSBmaW5kIGFs
d2F5cwo+IHJlYWxseSBjb25mdXNpbmcuIENhbid0IHdlIHN0YXJ0IHVzaW5nICJkZWxheSIgb3Ig
c29tZXRoaW5nIGVsc2U/Cj4gCj4gV2hhdCdzIGFsc28gY29uZnVzaW5nIGlzIHRoZSBjb21wdXRh
dGlvbi4gVXN1YWxseSB3aGVuIHlvdSBoYXZlCj4gbGF0ZW5jeSBpc3N1ZXMgdGhlIG1vcmUgbGF0
ZW5jeSB5b3UgaGF2ZSB0aGUgd29yc3QgaXQgaXMuCj4gSW4gY2xpZW50IHlvdSBjb21wdXRlIGEg
dmFsdWUgYW5kIHRoZSBfbGVzc18gaXQgaXMgdGhlIHdvcnN0IGl0IGlzLgo+IFVzdWFsbHkgYSBu
ZWdhdGl2ZSBsYXRlbmN5IGlzIGFuIGluZGljYXRpb24gdGhhdCBvciB5b3UgY3JhZnQgYQo+IHRp
bWUgbWFjaGluZSBvciBzb21ldGhpbmcgd2VudCB3cm9uZy4KPiAKPiA+IGh1Z2UgbGF0ZW5jeSBs
aWtlIDQwMCBtcyBoYW5kbGluZyB0aGUgbGF0ZW5jeSBjb3JyZWN0bHkgaXMgbXVjaCBsZXNzCj4g
PiBpbXBvcnRhbnQgYXMgaXQgb25seSBiZWNvbWUgaW1wb3J0YW50IHdoZW4geW91IGhhdmUgcmVh
bGx5IGEgYmFkIG5ldHdvcmsKPiA+IGNvbm5lY3Rpb24gb3IgYSB2ZXJ5IGxvbmcgZW5jb2Rpbmcg
dGltZXMuCj4gPiAKPiA+IEl0J3MgaW1wb3J0YW50IHRvIGRpc3Rpbmd1aXNoIGluY3JlYXNpbmcg
YW5kIGRlY3JlYXNpbmcgdGhlIGxhdGVuY3kuCj4gPiAKPiA+IEluY3JlYXNpbmcgdGhlIGxhdGVu
Y3kgbWVhbnMgYSBmcmFtZSBxdWV1ZWQgb24gdGhlIGNsaWVudCB3aWxsIGJlCj4gPiBkaXNwbGF5
ZWQgZXZlbiBsYXRlci4gU28gdGhlIGxhdGVuY3kgY2FuIGJlIGluY3JlYXNlZCBmcmVlbHkuCj4g
PiAKPiAKPiBJZiBJJ20gZHJhd2luZyB3aXRoIHRoZSBtb3VzZSBzb21ldGhpbmcgb24gdGhlIHNj
cmVlbiBhbmQgdGhlCj4gbGF0ZW5jeSBpcyAxMCBtaW51dGVzIEkgZG9uJ3QgcmVhbGx5IHRoaW5r
IHRoYXQgaW5jcmVhc2UgImZyZWVseSIKPiBpcyByZWFsbHkgZ29vZC4KPiBBbHNvIHRoaXMgcG90
ZW50aWFsbHkgY2FuIGxlYWQgdG8gYSBxdWV1ZSBvZiAxMCBtaW51dGVzIGluIHRoZQo+IGNsaWVu
dC4KPiAKPiA+IERlY3JlYXNpbmcgdGhlIGxhdGVuY3kgbWVhbnMgYSBidW5jaCBvZiBmcmFtZXMg
cXVldWVkIG9uIHRoZSBjbGllbnQgbWF5Cj4gPiBzdWRkZW5seSBiZWNvbWUgbGF0ZSwgY2F1c2lu
ZyB0aGVtIHRvIGJlIGRyb3BwZWQuIFNvIG1vcmUgY2FyZSBtdXN0IGJlCj4gPiB0YWtlbi4KPiA+
IAo+IAo+IElzIHRoZSBwcm9ibGVtIG9mICJjYXJlIHRvIHRha2UiIHNvbWV0aGluZyBub3QgYXZv
aWRhYmxlIG9yIGlzIGl0Cj4gc29tZXRoaW5nIHdlIGNyZWF0ZSB3aXRoIG91ciBoYW5kcz8gSSBt
ZWFuLCBJIGtub3cgdGhhdCBjdXJyZW50Cj4gaW1wbGVtZW50YXRpb24gd2lsbCBkcm9wIGZyYW1l
cyB3aGljaCB3ZSBkb24ndCB3YW50IGJ1dCBpcyBpdAo+IG5vdCBhIHdvcmthcm91bmQgb2YgYSBi
YWQgaW1wbGVtZW50YXRpb24/Cj4gCgpJIHRoaW5rIHRoZSBkcm9wIGluIG1qcGVnIHdhcyBkb25l
IHRvIHJlZHVjZSB0aGUgdGltZSBzcGVudCBkZWNvZGluZywKaWYgdGhlIGRlY29kaW5nIHdhcyB0
YWtpbmcgdG9vIG11Y2ggZHJvcHBpbmcgZnJhbWUgaGVscGVkLiBUaGlzIHdhcwpzdXJlbHkgZWFz
eSB0byBpbXBsZW1lbnQgaW4gYSBzaW5nbGUgdGhyZWFkZWQgYXBwbGljYXRpb24gYW5kIGlzIG5v
dApleHBlY3RlZCB0byBjYXVzZSBpc3N1ZXMgb24gYSB2aWRlbyAobW9yZSBmcmFtZXMgYXJlIGV4
cGVjdGVkKSBidXQKSSB3b3VsZCBpbnN0ZWFkIGRyb3Agb25seSBpZiB0aGVyZSdzIGEgcGVuZGlu
ZyBmcmFtZS4KCj4gSSBwZXJzb25hbGx5IHdvdWxkIHByb3Bvc2UgdG8gYXZvaWQgYWxsIHRoYXQg
Y29tcGxpY2F0ZWQgY29tcHV0YXRpb25zCj4gYmV0d2VlbiBzZXJ2ZXIgYW5kIGNsaWVudC4KPiBJ
ZiBldmVyeSBmcmFtZSBhbmQgYXVkaW8gcGllY2UgaXMgdGltZWQgd2l0aCBhIGNvbnNpc3RlbnQg
bW9ub3RvbmljIHRpbWUKPiAoYW5kIGN1cnJlbnQgdGhleSBBUkUpIHRoZXkgY2FuIGJlIGNvbnN1
bWVkIGFmdGVyIEVOQ09ESU5HICsgVFJBTlNNSVNTSU9OCj4gKyBERUNPRElORyB0aW1lLiBOb3cs
IGFsbCB0aGUgcGFydHMgaGF2ZSBza2V3cyBzbyB0byBhdm9pZCBzY2F0dGVyaW5nCj4gdXN1YWxs
eSB5b3UgYXR0ZW1wdCB0byBoYXZlIGEgbWluaW11bSAodGhhdCBpcyB0aGUgNDAwbXMpLgo+IE5v
dyBpdCBjb3VsZCBiZSBwcmV0dHkgc2ltcGxlIGZvciB0aGUgY2xpZW50IHRvIGNvbXB1dGUgdGhl
IEVOQ09ESU5HICsKPiBUUkFOU01JU1NJT04gKyBERUNPRElORyB2YWx1ZXMsIGp1c3QgcGllY2Ug
c2VydmVyX21tX3RpbWUgLSBwaWVjZV9tbV90aW1lIQo+IE5vdzogY3VycmVudGx5IHRoZSBzZXJ2
ZXJfbW1fdGltZSB3ZSBoYXZlIGlzIHNrZXdlZCBhbmQgZmx1Y3R1YXRpbmcgYnV0Cj4gd29uJ3Qg
YmUgaGFyZCB0byBnZXQgYSBtb3JlIGNvbnNpc3RlbnQgb25lIChhbmQgZWFzaWVyIHRvIHVwZGF0
ZSEpLgo+IFRoZSBlYXN5IGZvcm11bGEgdG8gY29tcHV0ZSB0aGUgIm1pbmltdW0iIGlzIG9idmlv
dXNseSB0aGUgbWF4aW11bSBvZgo+IHRoZSBwcmV2aW91cyBUSU1JTkdzICh3aGVyZSBUSU1JTkcg
PT0gRU5DT0RJTkcgKyBUUkFOU01JU1NJT04gKyBERUNPRElORykKPiBob3dldmVyIHRoaXMgZG9l
cyBub3QgdGFrZSBpbnRvIGFjY291bnQgdGhhdCB5b3UgY2FuIGhhdmUgcGVha3MgdGhhdAo+IHdp
bGwgc2xvdyBkb3duIGV2ZXJ5dGhpbmcgZm9yZXZlci4gWW91IHVzdWFsbHkgd2FudHMgdG8gaWdu
b3JlIHBlYWtzIGFuZAo+IGxvb2sgYXQgbW9yZSBsb2NhbCBhdmVyYWdlLiBBbHNvIHlvdSBzaG91
bGQgdGFrZSBpbnRvIGFjY291bnQgdGhhdCB3ZSBhcmUKPiBodW1hbiBhbmQgeW91IGRvbid0IG5l
ZWQgYSBwcmVjaXNpb24gb3IgbWlsbGlzZWNvbmRzICh3ZWxsLCB0aGlzIGlzIG1vcmUKPiB0cnVl
IGZvciB2aWRlbyB0aGFuIGZvciBhdWRpby4uLiBidXQgc2ltcGx5IGNvbnNpZGVyIHRoYXQgaWYg
eW91IHdhbnQgYQo+IHByZWNpc2lvbiBpbiBtcyBpbiB2aWRlbyB5b3UgbmVlZCAxMDAwIEZQUyEp
Lgo+IAo+IFRoYXQgc2FpZCwgYmFjayB0byB0aGUgcGF0Y2guIEluc3RlYWQgb2YganVzdCBzZXR0
aW5nIG1tX3RpbWVfZW5hYmxlZAo+IGRpcmVjdGx5IEkgd291bGQgY2FsbCByZWRzX2VuYWJsZV9t
bV90aW1lLCBpdCdzIG5vdCBpbiBhIGhvdCBwYXRoIHNvCj4gdGhlIHBlcmZvcm1hbmNlcyBhcmUg
bm90IGltcG9ydGFudCwgdGhlIG1haW4gY2hhbm5lbCBpcyBqdXN0IGNyZWF0ZWQKPiBzbyByZWRz
X3NlbmRfbW1fdGltZSB3aWxsIGRvIG5vdGhpbmcgYnV0IHlvdSdsbCBoYXZlIGEgbW9yZSBjb25z
aXN0ZW50Cj4gc2V0dGluZy4KCk9oLCB3b3VsZCBhbHNvIGdvb2QgdG8gaGF2ZSB0aGlzIGNvbW1l
bnQ6CgoiU3RhcnRpbmcgWHNwaWNlIChzbyBubyBXaW5kb3dzIGppbmdsZSBvciBvdGhlciBiZWlu
ZyBwbGF5ZWQgb24gc3RhcnR1cCksCnBsYXlpbmcgYSBXZWJHTCBkZW1vLCBhbmQgdGhlbiB0cnlp
bmcgdG8gZmlndXJlIG91dCB3aHkgdGhlIHNlcnZlcidzCmxhdGVuY3kgYWRqdXN0bWVudHMgaGFk
IGFic29sdXRlbHkgbm8gZWZmZWN0IG9uIHRoZSBjbGllbnQuIgoKb24gdGhlIGNvbW1pdCBtZXNz
YWdlLCBsaWtlCgoiV2Ugc2VuZCBtbV90aW1lIGFkanVzdG1lbnRzIHRvIHRoZSBjbGllbnQgd2hl
bmV2ZXIgdGhlcmUgaXMgbm8gYXVkaW8KcGxheWJhY2suIFRoZXJlIGlzIG5vIGF1ZGlvIHBsYXli
YWNrIG9uIHN0YXJ0dXAuIFRoZXJlZm9yZQptbV90aW1lX2VuYWJsZWQgbXVzdCBiZSB0cnVlIG9u
IHN0YXJ0dXAuCgpGb3IgaW5zdGFuY2UgdG8gcmVwcm9kdWNlIHN0YXJ0IFhzcGljZSAoc28gbm8g
V2luZG93cyBqaW5nbGUgb3Igb3RoZXIKYmVpbmcgcGxheWVkIG9uIHN0YXJ0dXApIGFuZCBwbGF5
IGEgV2ViR0wgZGVtby4gWW91J2xsIG5vdGljZSB0aGF0CnRoZSBzZXJ2ZXIncyBsYXRlbmN5IGFk
anVzdG1lbnRzIGhhZCBhYnNvbHV0ZWx5IG5vIGVmZmVjdCBvbiB0aGUgY2xpZW50LiIKCkZyZWRp
YW5vCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fClNwaWNl
LWRldmVsIG1haWxpbmcgbGlzdApTcGljZS1kZXZlbEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0
cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9zcGljZS1kZXZlbA==
